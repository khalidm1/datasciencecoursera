pollutantmean <- function(directory, pollutant, id = 1:332)
{
#create a list of files
files_full <- list.files(directory, full.names = TRUE)
# create an empty data frame
dat <- data.frame()
for (i in id)
{
#add files to main data
dat <- rbind(dat, read.csv(files_full[i]))
}
#Calulate mean
mean_data <- mean(dat[, pollutant], na.rm = TRUE)
return(mean_data)
}
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "nitrate", 23)
complete <- function(directory,  id = 1:332) {
# Format number with fixed width and then append .csv to number
fileNames <- paste0(directory, '/', formatC(id, width=3, flag="0"), ".csv" )
# Reading in all files and making a large data.table
lst <- lapply(fileNames, data.table::fread)
dt <- rbindlist(lst)
return(dt[complete.cases(dt), .(nobs = .N), by = ID])
}
complete(directory = 'specdata', id = 20:30)
complete <- function(directory,  id = 1:332) {
# Format number with fixed width and then append .csv to number
fileNames <- paste0(directory, '/', formatC(id, width=3, flag="0"), ".csv" )
# Reading in all files and making a large data.table
lst <- lapply(fileNames, data.table::fread)
dt <- rbindlist(lst)
return(dt[complete.cases(dt), .(nobs = .N), by = ID])
}
complete(directory = 'specdata', id = 20:30)
complete('specdata', id = 20:30)
complete(directory = 'C:/Users/khali/Desktop/Data Science/Big Data/R Programming coursera/W2/Assignment 1 Air Pollution/specdata', id = 20:30)
complete <- function(directory,  id = 1:332) {
# Format number with fixed width and then append .csv to number
fileNames <- paste0(directory, '/', formatC(id, width=3, flag="0"), ".csv" )
# Reading in all files and making a large data.table
lst <- lapply(fileNames, data.table::fread)
dt <- rbindlist(lst)
return(dt[complete.cases(dt), .(nobs = .N), by = ID])
}
complete(directory = 'C:/Users/khali/Desktop/Data Science/Big Data/R Programming coursera/W2/Assignment 1 Air Pollution/specdata', id = 20:30)
complete <- function(directory, id = 1:332)
{
#Create a list of file
files_full <- list.files(directory, full.names= TRUE)
# Create empty data frame
dat <- data.frame()
for (i in id)
{
# Read files
temp <- read.csv(files_full[i])
# nobs are sum of all complete cases
nobs <-sum(complete.cases(temp))
# Enamurtates complete cass by index
dat <-rbind(dat, data.frame(i, nobs))
}
colnames(dat) <- c("id", "nobs")
return(dat)
}
complete(directory = 'C:/Users/khali/Desktop/Data Science/Big Data/R Programming coursera/W2/Assignment 1 Air Pollution/specdata', id = 20:30)
complete("specdata", 1)
complete("specdata", c(2, 4, 8, 10, 12))
complete("specdata", 30:25)
complete("specdata", 3)
complete(directory = 'C:/Users/khali/Desktop/Data Science/Big Data/R Programming coursera/W2/Assignment 1 Air Pollution/specdata', id = 30:25)
complete <- function(directory, id = 1:332) {
##reads a directory full of files and reports the number of
##completely observed cases in each data file
monitorId <- c()
completeCases <- c()
for (i in id) {
monitorId <- append(monitorId, i)
filePath <- paste(directory, '/', formatC(i, width = 3, flag = "0"), '.csv', sep = "")
fileData <- read.csv(filePath)
completeCount <- sum(complete.cases(fileData))
completeCases <- append(completeCases, completeCount)
}
#  print(MonitorId)
#  print(CompleteCases)
return(as.data.frame(cbind(monitorId, completeCases)))
}
complete("specdata", 1)
complete("specdata", c(2, 4, 8, 10, 12))
complete("specdata", 30:25)
complete("specdata", 3)
complete(directory = 'C:/Users/khali/Desktop/Data Science/Big Data/R Programming coursera/W2/Assignment 1 Air Pollution/specdata', id = 30:25)
corr <- function(directory, threshold = 0)
{
#create list of all files
list <- list.files(directory, full.names= TRUE)
# create empty data set
dat <- vector(mode = "numeric", length = 0)
for(i in 1:length(list))
{
# Read File
tmp <- read.csv(list[i])
#Calculate csum
csum <- sum((!is.na(tmp$sulfate)) & (!is.na(tmp$nitrate)))
if (csum > threshold)
{
#Extract data of niteate and sulfate and calculate correlation between them
sul <- tmp[which(!is.na(tmp$sulfate)), ]
nit <- sul[which(!is.na(sul$nitrate)), ]
dat <- c(dat, cor(nit$sulfate, nit$nitrate))
}
}
dat
}
cr <- corr("specdata", 129)
corr <- function(directory, threshold = 0)
{
#create list of all files
list <- list.files(directory, full.names= TRUE)
# create empty data set
dat <- vector(mode = "numeric", length = 0)
for(i in 1:length(list))
{
# Read File
tmp <- read.csv(list[i])
#Calculate csum
csum <- sum((!is.na(tmp$sulfate)) & (!is.na(tmp$nitrate)))
if (csum > threshold)
{
#Extract data of niteate and sulfate and calculate correlation between them
sul <- tmp[which(!is.na(tmp$sulfate)), ]
nit <- sul[which(!is.na(sul$nitrate)), ]
dat <- c(dat, cor(nit$sulfate, nit$nitrate))
}
}
return(dat)
}
cr <- corr("specdata", 129)
cr
cr <- corr("specdata", 150)
head(cr)
summary(cr)
cr <- corr("specdata", 400)
head(cr)
cr <- corr("specdata", 5000)
summary(cr)
length(cr)
summary(cr)
cr <- corr("specdata")
summary(cr)
length(cr)
# Use the function
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 34)
pollutantmean("specdata", "sulfate", 34)
pollutantmean("specdata", "nitrate")
pollutantmean("specdata", "nitrate")
cc <- complete("specdata", c(6, 10, 20, 34, 100, 200, 310))
print(cc$nobs)
complete <- function(directory, id = 1:332)
{
#Create a list of file
files_full <- list.files(directory, full.names= TRUE)
# Create empty data frame
dat <- data.frame()
for (i in id)
{
# Read files
temp <- read.csv(files_full[i])
# nobs are sum of all complete cases
nobs <-sum(complete.cases(temp))
# Enamurtates complete cass by index
dat <-rbind(dat, data.frame(i, nobs))
}
colnames(dat) <- c("id", "nobs")
return(dat)
}
cc <- complete("specdata", c(6, 10, 20, 34, 100, 200, 310))
print(cc$nobs)
cc <- complete("specdata", 54)
print(cc$nobs)
RNGversion("3.5.1")
set.seed(42)
cc <- complete("specdata", 332:1)
use <- sample(332, 10)
print(cc[use, "nobs"])
cr <- corr("specdata")
cr <- sort(cr)
RNGversion("3.5.1")
set.seed(868)
out <- round(cr[sample(length(cr), 5)], 4)
print(out)
cr <- corr("specdata", 129)
cr <- sort(cr)
n <- length(cr)
RNGversion("3.5.1")
set.seed(197)
out <- c(n, round(cr[sample(n, 5)], 4))
print(out)
cr <- corr("specdata", 2000)
n <- length(cr)
cr <- corr("specdata", 1000)
cr <- sort(cr)
print(c(n, round(cr, 4)))
install.packages("swirl")
swirl()
library(swirl)
swirl()
exit
1+1
swirl()
5+7
x <- 5+7
x
y <- x-3
y
z <- c(1.1, 9, 3.14)
?
?c
?c
z
buy()
swirl()
swirl()
swirl()
library(datasets)
data(iris)
?iris
library(datasets)
data(iris)
?iris
force(iris)
View(iris)
mean(Sepal.Length)
species <- round(mean(iris$Sepal.Length))
species
species <- mean(iris$Sepal.Length)
species
species <- mean(iris$Sepal.Length == 'virginica')
species
irisdata [ species == 'virinica', round(mean(iris$Sepal.Length)) ]
library(datasets)
data(iris)
irisdata <- as.data.table(iris)
library(data.table)
irisdata <- as.data.table(iris)
irisdata [ species == 'virinica', round(mean(iris$Sepal.Length)) ]
irisdata [ species == 'virinica', mean(iris$Sepal.Length) ]
round(
round(
irisdata <- as.data.table(iris)
irisdata [ species == 'virinica', round(mean(iris$Sepal.Length)) ]
irisdata <- as.data.table(iris)
irisdata [ species == 'virinica', round(mean(iris$Sepal.Length)) ]
apply(iris[, 1:4], 2, mean)
library(datasets)
data(mtcars)
mean(mtcars$mpg, mtcars$cyl)
apply(mtcar$mpg, mtcars$cyl)
apply(mtcar, 2, mean)
sapply(mtcars, cyl, mean)
lapply(mtcars, mean)
tapply(mtcars$cyl, mtcars$mpg, mean)
split(mtcars, mtcars$cyl)
tapply(mtcars$mpg, mtcars$cyl, mean)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
round(abs(mtcars_dt[cyl == 4, mean_cols] - mtcars_dt[cyl == 8, mean_cols]))
round(abs(mtcars[cyl == 4, mean_cols] - mtcars_dt[cyl == 8, mean_cols]))
round(abs(mtcars[cyl == 4, mean_cols] - mtcars[cyl == 8, mean_cols]))
round(abs(mtcars[cyl == 4, mean] - mtcars[cyl == 8, mean]))
round(abs(mtcars[cyl == 4, mean] - mtcars[cyl == 8, mean] ))
round(abs(mtcars$cyl == 4, mean - mtcars$cyl == 8, mean ))
round(abs(mean(mtcars[mtcars$cyl == 8, ]$hp) - mean(mtcars[mtcars$cyl == 4, ]$hp)), 0)
round(abs(tapply(mtcars$hp, mtcars$cyl, mean)[1] - tapply(mtcars$hp, mtcars$cyl, mean)[3]), 0)
round(abs(sapply(split(mtcars$hp, mtcars$cyl)[1], mean) - sapply(split(mtcars$hp, mtcars$cyl)[3], mean)), 0)
debug(ls)
apply(iris[, 1:4], 2, mean)
round(mean(subset(iris, Species == 'virginica')$Sepal.Length, na.rm = T), 0)
mean(subset(iris, Species == 'virginica')$Sepal.Length, na.rm = T)
with(mtcars, tapply(mpg, cyl, mean))
tapply(mtcars$mpg, mtcars$cyl, mean)
sapply( split(mtcars$mpg, mtcars$cyl) , mean)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
round(abs(mean(mtcars[mtcars$cyl == 8, ]$hp) - mean(mtcars[mtcars$cyl == 4, ]$hp)), 0)
exit
